<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="release" name="Versioner">
	<property name="src.dir"     value="src"/>
	<property name="build.dir"   value="bin"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jar.dir"     value="${build.dir}/jar"/>
	<property name="dist.dir"     value="${build.dir}/dist"/>
	<property name="dist-lib.dir"     value="${dist.dir}/lib"/>
	<property name="dist-src.dir"     value="dist"/>
	<property name="main-class"  value="com.niffy.build.BuildTool" />
	<property name="lib.dir"     value="libs"/>
	
	<path id="classpath">
		<fileset dir="${lib.dir}" includes="*.jar"/>
		<pathelement path="${dist-src.dir}"/>
	</path>
	
	<path id="classpath.dist">
			<fileset dir="${dist-lib.dir}" includes="*.jar"/>
			<pathelement path="${dist.dir}"/>
		</path>

	<target name="create-dist-folder" description="Create dist folder">
		<mkdir dir="${dist.dir}"/>
	</target>
	
	<target name="distribute-libs" depends="create-dist-folder" description="Create the dist and libs folder, copy over libs and properties file">
		<mkdir dir="${dist-lib.dir}"/>
		<copy todir="${dist.dir}">
		    <fileset dir="${dist-src.dir}"/>
		</copy>
		<echo message="Copied required libs to dist folder ${dist.dir}" />
		<copy todir="${dist-lib.dir}">
			<fileset dir="${lib.dir}"/>
		</copy>
		<echo message="Copied required properties to dist folder ${dist.dir}" />
	</target>
	
	<target name="compile" description="Compile the java program">
		<mkdir dir="${classes.dir}"/>
	    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false"  classpathref="classpath">
		</javac>
	</target>
		
	<target name="jar-create-without-dependencies" depends="compile, distribute-libs" >
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
		<copy todir="${dist.dir}">
			<fileset dir="${jar.dir}"/>
		</copy>
		<echo message="Copyied the jar to ${dist.dir}" />
    </target>
	
	<target name="jar-create-with-dependencies" depends="compile, create-dist-folder" >
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}-dependencies.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        	<fileset dir="${classes.dir}" includes="**/*.class" />
	        <zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
        	<fileset dir="${dist-src.dir}" excludes="*.jar"/>
        </jar>
		<copy todir="${dist.dir}">
			<fileset dir="${jar.dir}"/>
		</copy>
		<echo message="Copyied the jar to ${dist.dir}" />
    </target>
	
	<target name="clean" description="Cleans build directory">
	    <delete dir="${build.dir}" failonerror="false"/>
	</target>
	<target name="release" depends="clean, release-with, release-without" description="Cleans and creates jar with and without dependencies"/>
	<target name="release-with" depends="clean, jar-create-with-dependencies" description="Cleans and creates jar with  dependencies"/>
	<target name="release-without" depends="clean, jar-create-without-dependencies" description="Cleans and creates jar without dependencies" />
	<target name="run" depends="run-without" description="Runs jar without dependencies"/>
	<target name="run-without" depends="jar-create-without-dependencies" description="Runs jar without dependencies">
		<java fork="true" classname="${main-class}">
			<classpath>
			    <path refid="classpath.dist"/>
			    <path location="${jar.dir}/${ant.project.name}.jar"/>
			</classpath>
		</java>
	</target>
	<target name="run-with" depends="jar-create-with-dependencies" description="Runs jar with dependencies" >
		<java fork="true" classname="${main-class}" >
			<classpath>
			    <path location="${dist.dir}/${ant.project.name}-dependencies.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="help">
		<echo>Niffy Java versioner. Available targets:</echo>
		<echo>   clean:				Clean build directory.</echo>
		<echo>   release:			Cleans, creates jar with and without dependencies.</echo>
		<echo>   release-with:		Cleans, creates jar with dependencies.</echo>
		<echo>   release-without:	Cleans, creates jar without dependencies.</echo>
		<echo>   run:				Runs jar without dependencies.</echo>
		<echo>   run-with:			Runs jar with dependencies.</echo>
		<echo>   run-without:		Runs jar without dependencies.</echo>
		<echo></echo>
		<echo>Best not to call these are they are part of a process</echo>
		<echo>	 create-dist-folder: Creates Dist folder</echo>
		<echo>   distribute-libs:	Copies files the to dist folder for jar without dependencies</echo>
		<echo>   compile:			Compiles java classes</echo>
		<echo>   jar-create-without-dependencies: calls..compile, distribute-libs, creates jar then copies to dist</echo>
		<echo>   jar-create-with-dependencies: calls..compile, create-dist-folder, creates jar then copies to dist</echo>
	</target>
</project>
